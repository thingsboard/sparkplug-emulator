<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© ${project.inceptionYear}-2024 The Thingsboard Authors

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.thinghsboard</groupId>
    <artifactId>sparkplug</artifactId>
    <version>1.3.0</version>
    <packaging>jar</packaging>

    <properties>
        <main.dir>${basedir}</main.dir>
        <docker.dir>${main.dir}/target</docker.dir>
        <pkg.user>thingsboard</pkg.user>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
        <protobuf.version>3.25.3</protobuf.version>
        <xolstice_protobuf.version>0.6.1</xolstice_protobuf.version>
        <grpc.version>1.63.0</grpc.version>
        <jar.version>3.4.0</jar.version>
        <spring-core.version>6.1.6</spring-core.version>
        <spring-boot.version>3.2.4</spring-boot.version>
        <paho.mqttv5.client.version>1.2.5</paho.mqttv5.client.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jackson-databind.version>2.17.2</jackson-databind.version>
        <lombok.version>1.18.32</lombok.version>
        <slf4j.version>2.0.13</slf4j.version>
        <log4j.version>2.23.1</log4j.version>
        <logback.version>1.5.5</logback.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <pkg.name>tb-sparkplug</pkg.name>
        <docker.name>tb-sparkplug-emulator</docker.name>
        <docker.repo>thingsboard</docker.repo>
        <dockerfile.skip>true</dockerfile.skip>
        <pkg.logFolder>/var/log/${pkg.name}</pkg.logFolder>
        <pkg.installFolder>/usr/share/${pkg.name}</pkg.installFolder>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.mqttv5.client</artifactId>
            <version>${paho.mqttv5.client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>17</release>
                        <compilerArgs>
                            <arg>-Xlint:deprecation</arg>
                            <arg>-Xlint:removal</arg>
                            <arg>-Xlint:unchecked</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${xolstice_protobuf.version}</version>
                <configuration>
                    <!--
                      The version of protoc must match protobuf-java. If you don't depend on
                      protobuf-java directly, you will be transitively depending on the
                      protobuf-java version that grpc depends on.
                    -->
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                    </pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>
                                        org.thinghsboard.sparkplug.SparkplugEmulation
                                    </mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>${main.dir}/license-header-template.txt</header>
                    <properties>
                        <owner>The Thingsboard Authors</owner>
                    </properties>
                    <excludes>
                        <exclude>**/.env</exclude>
                        <exclude>**/*.env</exclude>
                        <exclude>**/.eslintrc</exclude>
                        <exclude>**/.babelrc</exclude>
                        <exclude>**/.jshintrc</exclude>
                        <exclude>**/.gradle/**</exclude>
                        <exclude>**/nightwatch</exclude>
                        <exclude>**/README</exclude>
                        <exclude>**/LICENSE</exclude>
                        <exclude>**/banner.txt</exclude>
                        <exclude>node_modules/**</exclude>
                        <exclude>**/*.properties</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/vendor/**</exclude>
                        <exclude>src/font/**</exclude>
                        <exclude>src/sh/**</exclude>
                        <exclude>packaging/*/scripts/control/**</exclude>
                        <exclude>packaging/*/scripts/windows/**</exclude>
                        <exclude>packaging/*/scripts/init/**</exclude>
                        <exclude>**/*.log</exclude>
                        <exclude>**/*.current</exclude>
                        <exclude>.instance_id</exclude>
                        <exclude>src/main/scripts/control/**</exclude>
                        <exclude>src/main/scripts/windows/**</exclude>
                        <exclude>src/main/resources/public/static/rulenode/**</exclude>
                        <exclude>**/*.proto.js</exclude>
                        <exclude>ui/**</exclude>
                        <exclude>**/.browserslistrc</exclude>
                        <exclude>**/yarn.lock</exclude>
                        <exclude>**/.yarnrc</exclude>
                        <exclude>**/.angular/**</exclude>
                        <exclude>**/*.raw</exclude>
                        <exclude>**/*.patch</exclude>
                        <exclude>**/apache/cassandra/io/**</exclude>
                        <exclude>.run/**</exclude>
                        <exclude>**/NetworkReceive.java</exclude>
                    </excludes>
                    <mapping>
                        <proto>JAVADOC_STYLE</proto>
                        <cql>DOUBLEDASHES_STYLE</cql>
                        <scss>JAVADOC_STYLE</scss>
                        <jsx>SLASHSTAR_STYLE</jsx>
                        <tsx>SLASHSTAR_STYLE</tsx>
                        <conf>SCRIPT_STYLE</conf>
                        <gradle>JAVADOC_STYLE</gradle>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-docker-config</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>${dockerfile.skip}</skip>
                            <repository>${docker.repo}/${docker.name}</repository>
                            <verbose>true</verbose>
                            <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                            <contextDirectory>${project.build.directory}</contextDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tag-docker-image</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <skip>${dockerfile.skip}</skip>
                            <repository>${docker.repo}/${docker.name}</repository>
                            <tag>${project.version}</tag>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
<!--    Docker-->
    <profiles>
        <profile>
            <id>push-docker-image</id>
            <activation>
                <property>
                    <name>push-docker-image</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>push-latest-docker-image</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>latest</tag>
                                    <repository>${docker.repo}/${docker.name}</repository>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-version-docker-image</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                    <repository>${docker.repo}/${docker.name}</repository>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>


